# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   annotations: {}
#   creationTimestamp: null
#   generation: 1
#   labels:
#     app: influxdb
#   name: influxdb
#   namespace: monitoring
# spec:
#   progressDeadlineSeconds: 600
#   replicas: 1
#   revisionHistoryLimit: 10
#   selector:
#     matchLabels:
#       app: influxdb
#   strategy:
#     rollingUpdate:
#       maxSurge: 25%
#       maxUnavailable: 25%
#     type: RollingUpdate
#   template:
#     metadata:
#       creationTimestamp: null
#       labels:
#         app: influxdb
#     spec:
#       containers:
#       - env:
#           - name: INFLUXDB_ADMIN_USER_PASSWORD    
#              value: pass123 #you can give anything here. 
#           - name: INFLUXDB_ADMIN_USER_TOKEN
#              value: 778680654f2e287f788ae209a3cd559ae3ec398f30f2743f625c50133930a14c  # you must have a token given by influxdb after purchasing or signing up. 
#         image: influxdb:1.8.10
#         imagePullPolicy: Always
#         name: influxdb
#         resources: {}
#         terminationMessagePath: /dev/termination-log
#         terminationMessagePolicy: File
#         volumeMounts:
#         - mountPath: /var/lib/influxdb
#           name: var-lib-influxdb
#       dnsPolicy: ClusterFirst
#       restartPolicy: Always
#       schedulerName: default-scheduler
#       securityContext: {}
#       terminationGracePeriodSeconds: 30
#       volumes:
#       - name: var-lib-influxdb
#         persistentVolumeClaim:
#           claimName: influxdb-pvc
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   labels:
#     app: influxdb
#   name: influxdb-pvc
#   namespace: monitoring
# spec:
#   accessModes:
#   - ReadWriteOnce
#   resources:
#     requests:
#       storage: 50Gi
# ---

# apiVersion: v1
# kind: Service
# metadata:
#   name: influxdb
#   namespace: monitoring
#   labels:
#     app: influxdb
# spec:
#   selector:
#     app: influxdb
#   type: LoadBalancer
#   ports:
#     - protocol: TCP
#       port: 8086
#       targetPort: 8086


apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: influxdb-demo
  name: influxdb-demo
  namespace: monitoring
spec:
  replicas: 1
  selector: 
    matchLabels:
      app: influxdb-demo
  serviceName: influxdb-demo
  template:
    metadata:
      labels:
        app: influxdb-demo
    spec:
      containers:
        - image: docker.io/influxdb:latest
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: api
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: influxdb-demo
          ports:
            - containerPort: 8086
              name: api
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: api
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
            
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: influxdb-demo
  name: influxdb-demo
  namespace: monitoring
spec:
  type: LoadBalancer
  ports:
    - name: api
      port: 8086
      targetPort: 8086
    #   nodePort: 31234
  selector:
    app: influxdb-demo
# ---
# apiVersion: v1
# kind: Secret
# type: Opaque
# metadata:
#   name: influxdb-auth-demo
#   namespace: monitoring
# data:
#   username: YWRtaW4=
#   password: cGFzczEyMw==
#   org: bWFydG9yZw==
#   bucket: dGVzdC1idWNrZXQ=